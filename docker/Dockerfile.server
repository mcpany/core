# Copyright 2025 Author(s) of MCP-XY
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
# http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Stage 1: Build the Go binary
FROM golang:1.24.3 AS builder
WORKDIR /app

# Copy go.mod and go.sum files to download dependencies first
COPY go.mod go.sum ./
RUN go mod download && go mod verify

# Install GCC for CGO
RUN apt-get update && apt-get install -y gcc

# Copy the rest of the application source code
COPY . .

# Build the Go application for the target platform
# CGO_ENABLED=1 is required for go-sqlite3
ARG TARGETOS
ARG TARGETARCH
RUN CGO_ENABLED=1 GOOS=${TARGETOS:-linux} GOARCH=${TARGETARCH:-amd64} go build -v -o /server cmd/server/main.go

# Stage 2: Create the small runtime image
# Using distroless base image as CGO-enabled binaries are not fully static
FROM gcr.io/distroless/base-debian12
WORKDIR /app

# Copy the binary from the builder stage
COPY --from=builder /server /app/server

# Expose the ports the server listens on
EXPOSE 50050
EXPOSE 50051

# Set the command to run the server
CMD ["/app/server"]
