name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: '1.24'
        cache: true

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Cache all dependencies
      uses: actions/cache@v4
      with:
        path: |
          build/venv
          tests/integration/upstream/node_modules
        key: ${{ runner.os }}-deps-${{ hashFiles('requirements.txt', 'tests/integration/upstream/package-lock.json') }}-${{ github.job }}
        restore-keys: |
          ${{ runner.os }}-deps-${{ hashFiles('requirements.txt', 'tests/integration/upstream/package-lock.json') }}-
          ${{ runner.os }}-deps-

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Get Date
      id: get-date
      run: |
        echo "week=$(/bin/date -u "+%V")" >> $GITHUB_OUTPUT
      shell: bash

    - name: Docker Cache
      uses: actions/cache@v4
      with:
        path: build/buildx-cache
        key: ${{ runner.os }}-buildx-${{ steps.get-date.outputs.week }}-${{ hashFiles('tests/integration/examples/Dockerfile.timeserver', 'tests/integration/examples/timeserver_patch/**') }}-${{ github.job }}
        restore-keys: |
          ${{ runner.os }}-buildx-${{ steps.get-date.outputs.week }}-${{ hashFiles('tests/integration/examples/Dockerfile.timeserver', 'tests/integration/examples/timeserver_patch/**') }}-
          ${{ runner.os }}-buildx-${{ steps.get-date.outputs.week }}-

    - name: Cache Tools
      uses: actions/cache@v4
      with:
        path: build/env/bin
        key: ${{ runner.os }}-tools-${{ steps.get-date.outputs.week }}-${{ hashFiles('Makefile') }}-${{ github.job }}
        restore-keys: |
          ${{ runner.os }}-tools-${{ steps.get-date.outputs.week }}-${{ hashFiles('Makefile') }}-
          ${{ runner.os }}-tools-${{ steps.get-date.outputs.week }}-

    - name: Install Python venv if not present
      run: |
        if ! dpkg -s python3-venv >/dev/null 2>&1; then
          sudo apt-get update
          sudo apt-get install -y python3-venv
        fi

    - name: Prepare environment
      run: |
        make prepare CACHE_TO=type=local,dest=build/buildx-cache CACHE_FROM=type=local,src=build/buildx-cache

    - name: Check linting
      run: make lint

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: '1.24'
        cache: true

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Cache all dependencies
      uses: actions/cache@v4
      with:
        path: |
          build/venv
          tests/integration/upstream/node_modules
        key: ${{ runner.os }}-deps-${{ hashFiles('requirements.txt', 'tests/integration/upstream/package-lock.json') }}-${{ github.job }}
        restore-keys: |
          ${{ runner.os }}-deps-${{ hashFiles('requirements.txt', 'tests/integration/upstream/package-lock.json') }}-
          ${{ runner.os }}-deps-

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Get Date
      id: get-date
      run: |
        echo "week=$(/bin/date -u "+%V")" >> $GITHUB_OUTPUT
      shell: bash

    - name: Docker Cache
      uses: actions/cache@v4
      with:
        path: build/buildx-cache
        key: ${{ runner.os }}-buildx-${{ steps.get-date.outputs.week }}-${{ hashFiles('tests/integration/examples/Dockerfile.timeserver', 'tests/integration/examples/timeserver_patch/**') }}-${{ github.job }}
        restore-keys: |
          ${{ runner.os }}-buildx-${{ steps.get-date.outputs.week }}-${{ hashFiles('tests/integration/examples/Dockerfile.timeserver', 'tests/integration/examples/timeserver_patch/**') }}-
          ${{ runner.os }}-buildx-${{ steps.get-date.outputs.week }}-

    - name: Cache Tools
      uses: actions/cache@v4
      with:
        path: build/env/bin
        key: ${{ runner.os }}-tools-${{ steps.get-date.outputs.week }}-${{ hashFiles('Makefile') }}-${{ github.job }}
        restore-keys: |
          ${{ runner.os }}-tools-${{ steps.get-date.outputs.week }}-${{ hashFiles('Makefile') }}-
          ${{ runner.os }}-tools-${{ steps.get-date.outputs.week }}-

    - name: Install Python venv if not present
      run: |
        if ! dpkg -s python3-venv >/dev/null 2>&1; then
          sudo apt-get update
          sudo apt-get install -y python3-venv
        fi

    - name: Prepare environment
      run: make prepare CACHE_TO=type=local,dest=build/buildx-cache CACHE_FROM=type=local,src=build/buildx-cache

    - name: test everything
      run: |
        make test CACHE_TO=type=local,dest=build/buildx-cache CACHE_FROM=type=local,src=build/buildx-cache
