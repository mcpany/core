// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: proto/api/v1/registration.proto

package v1

import (
	v1 "github.com/mcpxy/mcpx/proto/config/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegisterServiceRequest struct {
	state             protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Config *v1.UpstreamServiceConfig `protobuf:"bytes,1,opt,name=config"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RegisterServiceRequest) Reset() {
	*x = RegisterServiceRequest{}
	mi := &file_proto_api_v1_registration_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterServiceRequest) ProtoMessage() {}

func (x *RegisterServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_v1_registration_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RegisterServiceRequest) GetConfig() *v1.UpstreamServiceConfig {
	if x != nil {
		return x.xxx_hidden_Config
	}
	return nil
}

func (x *RegisterServiceRequest) SetConfig(v *v1.UpstreamServiceConfig) {
	x.xxx_hidden_Config = v
}

func (x *RegisterServiceRequest) HasConfig() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Config != nil
}

func (x *RegisterServiceRequest) ClearConfig() {
	x.xxx_hidden_Config = nil
}

type RegisterServiceRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Config *v1.UpstreamServiceConfig
}

func (b0 RegisterServiceRequest_builder) Build() *RegisterServiceRequest {
	m0 := &RegisterServiceRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Config = b.Config
	return m0
}

type RegisterServiceResponse struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Message         *string                `protobuf:"bytes,1,opt,name=message"`
	xxx_hidden_DiscoveredTools *[]*v1.ToolDefinition  `protobuf:"bytes,2,rep,name=discovered_tools,json=discoveredTools"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *RegisterServiceResponse) Reset() {
	*x = RegisterServiceResponse{}
	mi := &file_proto_api_v1_registration_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterServiceResponse) ProtoMessage() {}

func (x *RegisterServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_v1_registration_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RegisterServiceResponse) GetMessage() string {
	if x != nil {
		if x.xxx_hidden_Message != nil {
			return *x.xxx_hidden_Message
		}
		return ""
	}
	return ""
}

func (x *RegisterServiceResponse) GetDiscoveredTools() []*v1.ToolDefinition {
	if x != nil {
		if x.xxx_hidden_DiscoveredTools != nil {
			return *x.xxx_hidden_DiscoveredTools
		}
	}
	return nil
}

func (x *RegisterServiceResponse) SetMessage(v string) {
	x.xxx_hidden_Message = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *RegisterServiceResponse) SetDiscoveredTools(v []*v1.ToolDefinition) {
	x.xxx_hidden_DiscoveredTools = &v
}

func (x *RegisterServiceResponse) HasMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RegisterServiceResponse) ClearMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Message = nil
}

type RegisterServiceResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Message         *string
	DiscoveredTools []*v1.ToolDefinition
}

func (b0 RegisterServiceResponse_builder) Build() *RegisterServiceResponse {
	m0 := &RegisterServiceResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Message != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Message = b.Message
	}
	x.xxx_hidden_DiscoveredTools = &b.DiscoveredTools
	return m0
}

type InitiateOAuth2FlowRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ServiceId   *string                `protobuf:"bytes,1,opt,name=service_id,json=serviceId"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,2,opt,name=namespace"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *InitiateOAuth2FlowRequest) Reset() {
	*x = InitiateOAuth2FlowRequest{}
	mi := &file_proto_api_v1_registration_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitiateOAuth2FlowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitiateOAuth2FlowRequest) ProtoMessage() {}

func (x *InitiateOAuth2FlowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_v1_registration_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *InitiateOAuth2FlowRequest) GetServiceId() string {
	if x != nil {
		if x.xxx_hidden_ServiceId != nil {
			return *x.xxx_hidden_ServiceId
		}
		return ""
	}
	return ""
}

func (x *InitiateOAuth2FlowRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *InitiateOAuth2FlowRequest) SetServiceId(v string) {
	x.xxx_hidden_ServiceId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *InitiateOAuth2FlowRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *InitiateOAuth2FlowRequest) HasServiceId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *InitiateOAuth2FlowRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *InitiateOAuth2FlowRequest) ClearServiceId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ServiceId = nil
}

func (x *InitiateOAuth2FlowRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Namespace = nil
}

type InitiateOAuth2FlowRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ServiceId *string
	Namespace *string
}

func (b0 InitiateOAuth2FlowRequest_builder) Build() *InitiateOAuth2FlowRequest {
	m0 := &InitiateOAuth2FlowRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ServiceId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_ServiceId = b.ServiceId
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type InitiateOAuth2FlowResponse struct {
	state                       protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_AuthorizationUrl *string                `protobuf:"bytes,1,opt,name=authorization_url,json=authorizationUrl"`
	xxx_hidden_State            *string                `protobuf:"bytes,2,opt,name=state"`
	XXX_raceDetectHookData      protoimpl.RaceDetectHookData
	XXX_presence                [1]uint32
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *InitiateOAuth2FlowResponse) Reset() {
	*x = InitiateOAuth2FlowResponse{}
	mi := &file_proto_api_v1_registration_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitiateOAuth2FlowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitiateOAuth2FlowResponse) ProtoMessage() {}

func (x *InitiateOAuth2FlowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_v1_registration_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *InitiateOAuth2FlowResponse) GetAuthorizationUrl() string {
	if x != nil {
		if x.xxx_hidden_AuthorizationUrl != nil {
			return *x.xxx_hidden_AuthorizationUrl
		}
		return ""
	}
	return ""
}

func (x *InitiateOAuth2FlowResponse) GetState() string {
	if x != nil {
		if x.xxx_hidden_State != nil {
			return *x.xxx_hidden_State
		}
		return ""
	}
	return ""
}

func (x *InitiateOAuth2FlowResponse) SetAuthorizationUrl(v string) {
	x.xxx_hidden_AuthorizationUrl = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *InitiateOAuth2FlowResponse) SetState(v string) {
	x.xxx_hidden_State = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *InitiateOAuth2FlowResponse) HasAuthorizationUrl() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *InitiateOAuth2FlowResponse) HasState() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *InitiateOAuth2FlowResponse) ClearAuthorizationUrl() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_AuthorizationUrl = nil
}

func (x *InitiateOAuth2FlowResponse) ClearState() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_State = nil
}

type InitiateOAuth2FlowResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	AuthorizationUrl *string
	State            *string
}

func (b0 InitiateOAuth2FlowResponse_builder) Build() *InitiateOAuth2FlowResponse {
	m0 := &InitiateOAuth2FlowResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.AuthorizationUrl != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_AuthorizationUrl = b.AuthorizationUrl
	}
	if b.State != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_State = b.State
	}
	return m0
}

type UnregisterServiceRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ServiceName *string                `protobuf:"bytes,1,opt,name=service_name,json=serviceName"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,2,opt,name=namespace"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UnregisterServiceRequest) Reset() {
	*x = UnregisterServiceRequest{}
	mi := &file_proto_api_v1_registration_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnregisterServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterServiceRequest) ProtoMessage() {}

func (x *UnregisterServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_v1_registration_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UnregisterServiceRequest) GetServiceName() string {
	if x != nil {
		if x.xxx_hidden_ServiceName != nil {
			return *x.xxx_hidden_ServiceName
		}
		return ""
	}
	return ""
}

func (x *UnregisterServiceRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *UnregisterServiceRequest) SetServiceName(v string) {
	x.xxx_hidden_ServiceName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *UnregisterServiceRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *UnregisterServiceRequest) HasServiceName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UnregisterServiceRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UnregisterServiceRequest) ClearServiceName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ServiceName = nil
}

func (x *UnregisterServiceRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Namespace = nil
}

type UnregisterServiceRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ServiceName *string
	Namespace   *string
}

func (b0 UnregisterServiceRequest_builder) Build() *UnregisterServiceRequest {
	m0 := &UnregisterServiceRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ServiceName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_ServiceName = b.ServiceName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type UnregisterServiceResponse struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Message     *string                `protobuf:"bytes,1,opt,name=message"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UnregisterServiceResponse) Reset() {
	*x = UnregisterServiceResponse{}
	mi := &file_proto_api_v1_registration_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnregisterServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterServiceResponse) ProtoMessage() {}

func (x *UnregisterServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_v1_registration_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UnregisterServiceResponse) GetMessage() string {
	if x != nil {
		if x.xxx_hidden_Message != nil {
			return *x.xxx_hidden_Message
		}
		return ""
	}
	return ""
}

func (x *UnregisterServiceResponse) SetMessage(v string) {
	x.xxx_hidden_Message = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *UnregisterServiceResponse) HasMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UnregisterServiceResponse) ClearMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Message = nil
}

type UnregisterServiceResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Message *string
}

func (b0 UnregisterServiceResponse_builder) Build() *UnregisterServiceResponse {
	m0 := &UnregisterServiceResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Message != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Message = b.Message
	}
	return m0
}

type RegisterToolsRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ServiceName *string                `protobuf:"bytes,1,opt,name=service_name,json=serviceName"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,2,opt,name=namespace"`
	xxx_hidden_Tools       *[]*v1.ToolDefinition  `protobuf:"bytes,3,rep,name=tools"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *RegisterToolsRequest) Reset() {
	*x = RegisterToolsRequest{}
	mi := &file_proto_api_v1_registration_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterToolsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterToolsRequest) ProtoMessage() {}

func (x *RegisterToolsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_v1_registration_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RegisterToolsRequest) GetServiceName() string {
	if x != nil {
		if x.xxx_hidden_ServiceName != nil {
			return *x.xxx_hidden_ServiceName
		}
		return ""
	}
	return ""
}

func (x *RegisterToolsRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *RegisterToolsRequest) GetTools() []*v1.ToolDefinition {
	if x != nil {
		if x.xxx_hidden_Tools != nil {
			return *x.xxx_hidden_Tools
		}
	}
	return nil
}

func (x *RegisterToolsRequest) SetServiceName(v string) {
	x.xxx_hidden_ServiceName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *RegisterToolsRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *RegisterToolsRequest) SetTools(v []*v1.ToolDefinition) {
	x.xxx_hidden_Tools = &v
}

func (x *RegisterToolsRequest) HasServiceName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RegisterToolsRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *RegisterToolsRequest) ClearServiceName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ServiceName = nil
}

func (x *RegisterToolsRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Namespace = nil
}

type RegisterToolsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ServiceName *string
	Namespace   *string
	Tools       []*v1.ToolDefinition
}

func (b0 RegisterToolsRequest_builder) Build() *RegisterToolsRequest {
	m0 := &RegisterToolsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ServiceName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_ServiceName = b.ServiceName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Namespace = b.Namespace
	}
	x.xxx_hidden_Tools = &b.Tools
	return m0
}

type RegisterToolsResponse struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Message         *string                `protobuf:"bytes,1,opt,name=message"`
	xxx_hidden_ToolsRegistered int32                  `protobuf:"varint,2,opt,name=tools_registered,json=toolsRegistered"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *RegisterToolsResponse) Reset() {
	*x = RegisterToolsResponse{}
	mi := &file_proto_api_v1_registration_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterToolsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterToolsResponse) ProtoMessage() {}

func (x *RegisterToolsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_v1_registration_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RegisterToolsResponse) GetMessage() string {
	if x != nil {
		if x.xxx_hidden_Message != nil {
			return *x.xxx_hidden_Message
		}
		return ""
	}
	return ""
}

func (x *RegisterToolsResponse) GetToolsRegistered() int32 {
	if x != nil {
		return x.xxx_hidden_ToolsRegistered
	}
	return 0
}

func (x *RegisterToolsResponse) SetMessage(v string) {
	x.xxx_hidden_Message = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *RegisterToolsResponse) SetToolsRegistered(v int32) {
	x.xxx_hidden_ToolsRegistered = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *RegisterToolsResponse) HasMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RegisterToolsResponse) HasToolsRegistered() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *RegisterToolsResponse) ClearMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Message = nil
}

func (x *RegisterToolsResponse) ClearToolsRegistered() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ToolsRegistered = 0
}

type RegisterToolsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Message         *string
	ToolsRegistered *int32
}

func (b0 RegisterToolsResponse_builder) Build() *RegisterToolsResponse {
	m0 := &RegisterToolsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Message != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Message = b.Message
	}
	if b.ToolsRegistered != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_ToolsRegistered = *b.ToolsRegistered
	}
	return m0
}

type GetServiceStatusRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ServiceName *string                `protobuf:"bytes,1,opt,name=service_name,json=serviceName"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,2,opt,name=namespace"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetServiceStatusRequest) Reset() {
	*x = GetServiceStatusRequest{}
	mi := &file_proto_api_v1_registration_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServiceStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceStatusRequest) ProtoMessage() {}

func (x *GetServiceStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_v1_registration_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetServiceStatusRequest) GetServiceName() string {
	if x != nil {
		if x.xxx_hidden_ServiceName != nil {
			return *x.xxx_hidden_ServiceName
		}
		return ""
	}
	return ""
}

func (x *GetServiceStatusRequest) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *GetServiceStatusRequest) SetServiceName(v string) {
	x.xxx_hidden_ServiceName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *GetServiceStatusRequest) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *GetServiceStatusRequest) HasServiceName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetServiceStatusRequest) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *GetServiceStatusRequest) ClearServiceName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ServiceName = nil
}

func (x *GetServiceStatusRequest) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Namespace = nil
}

type GetServiceStatusRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ServiceName *string
	Namespace   *string
}

func (b0 GetServiceStatusRequest_builder) Build() *GetServiceStatusRequest {
	m0 := &GetServiceStatusRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ServiceName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_ServiceName = b.ServiceName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type GetServiceStatusResponse struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Tools   *[]*v1.ToolDefinition  `protobuf:"bytes,1,rep,name=tools"`
	xxx_hidden_Metrics map[string]int64       `protobuf:"bytes,2,rep,name=metrics" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetServiceStatusResponse) Reset() {
	*x = GetServiceStatusResponse{}
	mi := &file_proto_api_v1_registration_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServiceStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceStatusResponse) ProtoMessage() {}

func (x *GetServiceStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_v1_registration_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetServiceStatusResponse) GetTools() []*v1.ToolDefinition {
	if x != nil {
		if x.xxx_hidden_Tools != nil {
			return *x.xxx_hidden_Tools
		}
	}
	return nil
}

func (x *GetServiceStatusResponse) GetMetrics() map[string]int64 {
	if x != nil {
		return x.xxx_hidden_Metrics
	}
	return nil
}

func (x *GetServiceStatusResponse) SetTools(v []*v1.ToolDefinition) {
	x.xxx_hidden_Tools = &v
}

func (x *GetServiceStatusResponse) SetMetrics(v map[string]int64) {
	x.xxx_hidden_Metrics = v
}

type GetServiceStatusResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Tools   []*v1.ToolDefinition
	Metrics map[string]int64
}

func (b0 GetServiceStatusResponse_builder) Build() *GetServiceStatusResponse {
	m0 := &GetServiceStatusResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Tools = &b.Tools
	x.xxx_hidden_Metrics = b.Metrics
	return m0
}

var File_proto_api_v1_registration_proto protoreflect.FileDescriptor

const file_proto_api_v1_registration_proto_rawDesc = "" +
	"\n" +
	"\x1fproto/api/v1/registration.proto\x12\vmcpx.api.v1\x1a\x1cproto/config/v1/config.proto\"W\n" +
	"\x16RegisterServiceRequest\x12=\n" +
	"\x06config\x18\x01 \x01(\v2%.mcpx.config.v1.UpstreamServiceConfigR\x06config\"~\n" +
	"\x17RegisterServiceResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12I\n" +
	"\x10discovered_tools\x18\x02 \x03(\v2\x1e.mcpx.config.v1.ToolDefinitionR\x0fdiscoveredTools\"X\n" +
	"\x19InitiateOAuth2FlowRequest\x12\x1d\n" +
	"\n" +
	"service_id\x18\x01 \x01(\tR\tserviceId\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\"_\n" +
	"\x1aInitiateOAuth2FlowResponse\x12+\n" +
	"\x11authorization_url\x18\x01 \x01(\tR\x10authorizationUrl\x12\x14\n" +
	"\x05state\x18\x02 \x01(\tR\x05state\"[\n" +
	"\x18UnregisterServiceRequest\x12!\n" +
	"\fservice_name\x18\x01 \x01(\tR\vserviceName\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\"5\n" +
	"\x19UnregisterServiceResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"\x8d\x01\n" +
	"\x14RegisterToolsRequest\x12!\n" +
	"\fservice_name\x18\x01 \x01(\tR\vserviceName\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x124\n" +
	"\x05tools\x18\x03 \x03(\v2\x1e.mcpx.config.v1.ToolDefinitionR\x05tools\"\\\n" +
	"\x15RegisterToolsResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12)\n" +
	"\x10tools_registered\x18\x02 \x01(\x05R\x0ftoolsRegistered\"Z\n" +
	"\x17GetServiceStatusRequest\x12!\n" +
	"\fservice_name\x18\x01 \x01(\tR\vserviceName\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\"\xda\x01\n" +
	"\x18GetServiceStatusResponse\x124\n" +
	"\x05tools\x18\x01 \x03(\v2\x1e.mcpx.config.v1.ToolDefinitionR\x05tools\x12L\n" +
	"\ametrics\x18\x02 \x03(\v22.mcpx.api.v1.GetServiceStatusResponse.MetricsEntryR\ametrics\x1a:\n" +
	"\fMetricsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x012\xf7\x03\n" +
	"\x13RegistrationService\x12\\\n" +
	"\x0fRegisterService\x12#.mcpx.api.v1.RegisterServiceRequest\x1a$.mcpx.api.v1.RegisterServiceResponse\x12b\n" +
	"\x11UnregisterService\x12%.mcpx.api.v1.UnregisterServiceRequest\x1a&.mcpx.api.v1.UnregisterServiceResponse\x12e\n" +
	"\x12InitiateOAuth2Flow\x12&.mcpx.api.v1.InitiateOAuth2FlowRequest\x1a'.mcpx.api.v1.InitiateOAuth2FlowResponse\x12V\n" +
	"\rRegisterTools\x12!.mcpx.api.v1.RegisterToolsRequest\x1a\".mcpx.api.v1.RegisterToolsResponse\x12_\n" +
	"\x10GetServiceStatus\x12$.mcpx.api.v1.GetServiceStatusRequest\x1a%.mcpx.api.v1.GetServiceStatusResponseB$Z\"github.com/mcpxy/mcpx/proto/api/v1b\beditionsp\xe8\a"

var file_proto_api_v1_registration_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_proto_api_v1_registration_proto_goTypes = []any{
	(*RegisterServiceRequest)(nil),     // 0: mcpx.api.v1.RegisterServiceRequest
	(*RegisterServiceResponse)(nil),    // 1: mcpx.api.v1.RegisterServiceResponse
	(*InitiateOAuth2FlowRequest)(nil),  // 2: mcpx.api.v1.InitiateOAuth2FlowRequest
	(*InitiateOAuth2FlowResponse)(nil), // 3: mcpx.api.v1.InitiateOAuth2FlowResponse
	(*UnregisterServiceRequest)(nil),   // 4: mcpx.api.v1.UnregisterServiceRequest
	(*UnregisterServiceResponse)(nil),  // 5: mcpx.api.v1.UnregisterServiceResponse
	(*RegisterToolsRequest)(nil),       // 6: mcpx.api.v1.RegisterToolsRequest
	(*RegisterToolsResponse)(nil),      // 7: mcpx.api.v1.RegisterToolsResponse
	(*GetServiceStatusRequest)(nil),    // 8: mcpx.api.v1.GetServiceStatusRequest
	(*GetServiceStatusResponse)(nil),   // 9: mcpx.api.v1.GetServiceStatusResponse
	nil,                                // 10: mcpx.api.v1.GetServiceStatusResponse.MetricsEntry
	(*v1.UpstreamServiceConfig)(nil),   // 11: mcpx.config.v1.UpstreamServiceConfig
	(*v1.ToolDefinition)(nil),          // 12: mcpx.config.v1.ToolDefinition
}
var file_proto_api_v1_registration_proto_depIdxs = []int32{
	11, // 0: mcpx.api.v1.RegisterServiceRequest.config:type_name -> mcpx.config.v1.UpstreamServiceConfig
	12, // 1: mcpx.api.v1.RegisterServiceResponse.discovered_tools:type_name -> mcpx.config.v1.ToolDefinition
	12, // 2: mcpx.api.v1.RegisterToolsRequest.tools:type_name -> mcpx.config.v1.ToolDefinition
	12, // 3: mcpx.api.v1.GetServiceStatusResponse.tools:type_name -> mcpx.config.v1.ToolDefinition
	10, // 4: mcpx.api.v1.GetServiceStatusResponse.metrics:type_name -> mcpx.api.v1.GetServiceStatusResponse.MetricsEntry
	0,  // 5: mcpx.api.v1.RegistrationService.RegisterService:input_type -> mcpx.api.v1.RegisterServiceRequest
	4,  // 6: mcpx.api.v1.RegistrationService.UnregisterService:input_type -> mcpx.api.v1.UnregisterServiceRequest
	2,  // 7: mcpx.api.v1.RegistrationService.InitiateOAuth2Flow:input_type -> mcpx.api.v1.InitiateOAuth2FlowRequest
	6,  // 8: mcpx.api.v1.RegistrationService.RegisterTools:input_type -> mcpx.api.v1.RegisterToolsRequest
	8,  // 9: mcpx.api.v1.RegistrationService.GetServiceStatus:input_type -> mcpx.api.v1.GetServiceStatusRequest
	1,  // 10: mcpx.api.v1.RegistrationService.RegisterService:output_type -> mcpx.api.v1.RegisterServiceResponse
	5,  // 11: mcpx.api.v1.RegistrationService.UnregisterService:output_type -> mcpx.api.v1.UnregisterServiceResponse
	3,  // 12: mcpx.api.v1.RegistrationService.InitiateOAuth2Flow:output_type -> mcpx.api.v1.InitiateOAuth2FlowResponse
	7,  // 13: mcpx.api.v1.RegistrationService.RegisterTools:output_type -> mcpx.api.v1.RegisterToolsResponse
	9,  // 14: mcpx.api.v1.RegistrationService.GetServiceStatus:output_type -> mcpx.api.v1.GetServiceStatusResponse
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_proto_api_v1_registration_proto_init() }
func file_proto_api_v1_registration_proto_init() {
	if File_proto_api_v1_registration_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_api_v1_registration_proto_rawDesc), len(file_proto_api_v1_registration_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_api_v1_registration_proto_goTypes,
		DependencyIndexes: file_proto_api_v1_registration_proto_depIdxs,
		MessageInfos:      file_proto_api_v1_registration_proto_msgTypes,
	}.Build()
	File_proto_api_v1_registration_proto = out.File
	file_proto_api_v1_registration_proto_goTypes = nil
	file_proto_api_v1_registration_proto_depIdxs = nil
}
