// Copyright (C) 2025 Author(s) of MCP-XY
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v4.25.1
// source: proto/mcp_options/v1/content.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Content struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Content     *string                `protobuf:"bytes,1,opt,name=content,proto3,oneof"`
	xxx_hidden_Role        *string                `protobuf:"bytes,2,opt,name=role,proto3,oneof"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Content) Reset() {
	*x = Content{}
	mi := &file_proto_mcp_options_v1_content_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Content) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Content) ProtoMessage() {}

func (x *Content) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mcp_options_v1_content_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Content) GetContent() string {
	if x != nil {
		if x.xxx_hidden_Content != nil {
			return *x.xxx_hidden_Content
		}
		return ""
	}
	return ""
}

func (x *Content) GetRole() string {
	if x != nil {
		if x.xxx_hidden_Role != nil {
			return *x.xxx_hidden_Role
		}
		return ""
	}
	return ""
}

func (x *Content) SetContent(v string) {
	x.xxx_hidden_Content = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *Content) SetRole(v string) {
	x.xxx_hidden_Role = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *Content) HasContent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Content) HasRole() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Content) ClearContent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Content = nil
}

func (x *Content) ClearRole() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Role = nil
}

type Content_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Content *string
	Role    *string
}

func (b0 Content_builder) Build() *Content {
	m0 := &Content{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Content != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Content = b.Content
	}
	if b.Role != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Role = b.Role
	}
	return m0
}

var File_proto_mcp_options_v1_content_proto protoreflect.FileDescriptor

const file_proto_mcp_options_v1_content_proto_rawDesc = "" +
	"\n" +
	"\"proto/mcp_options/v1/content.proto\x12\x13mcpx.mcp_options.v1\"V\n" +
	"\aContent\x12\x1d\n" +
	"\acontent\x18\x01 \x01(\tH\x00R\acontent\x88\x01\x01\x12\x17\n" +
	"\x04role\x18\x02 \x01(\tH\x01R\x04role\x88\x01\x01B\n" +
	"\n" +
	"\b_contentB\a\n" +
	"\x05_roleB,Z*github.com/mcpxy/core/proto/mcp_options/v1b\x06proto3"

var file_proto_mcp_options_v1_content_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_proto_mcp_options_v1_content_proto_goTypes = []any{
	(*Content)(nil), // 0: mcpx.mcp_options.v1.Content
}
var file_proto_mcp_options_v1_content_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_mcp_options_v1_content_proto_init() }
func file_proto_mcp_options_v1_content_proto_init() {
	if File_proto_mcp_options_v1_content_proto != nil {
		return
	}
	file_proto_mcp_options_v1_content_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_mcp_options_v1_content_proto_rawDesc), len(file_proto_mcp_options_v1_content_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_mcp_options_v1_content_proto_goTypes,
		DependencyIndexes: file_proto_mcp_options_v1_content_proto_depIdxs,
		MessageInfos:      file_proto_mcp_options_v1_content_proto_msgTypes,
	}.Build()
	File_proto_mcp_options_v1_content_proto = out.File
	file_proto_mcp_options_v1_content_proto_goTypes = nil
	file_proto_mcp_options_v1_content_proto_depIdxs = nil
}
